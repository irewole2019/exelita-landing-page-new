"use client"

import { useState, useEffect } from "react"
import { Button } from "@/components/ui/button"
import { ChevronLeft, Download, Mail, CheckCircle, AlertCircle, TrendingUp } from "lucide-react"

interface EnhancedResultsStepProps {
  data: Record<string, string>
  resumeText?: string
  onBack: () => void
  onClose: () => void
}

export default function EnhancedResultsStep({ data, resumeText, onBack, onClose }: EnhancedResultsStepProps) {
  const [assessment, setAssessment] = useState<string>("")
  const [loading, setLoading] = useState(true)
  const [error, setError] = useState<string>("")

  useEffect(() => {
    const fetchAssessment = async () => {
      try {
        setLoading(true)
        const response = await fetch("/api/enhanced-eligibility-evaluation", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({
            answers: data,
            resumeText: resumeText,
          }),
        })

        if (!response.ok) {
          throw new Error("Failed to get assessment")
        }

        const result = await response.json()
        setAssessment(result.assessment)
      } catch (err) {
        setError("Failed to generate assessment. Please try again.")
        console.error("Assessment error:", err)
      } finally {
        setLoading(false)
      }
    }

    fetchAssessment()
  }, [data, resumeText])

  const handleDownloadReport = () => {
    const reportContent = `
EB-1 Eligibility Assessment Report
Generated by Exelita AI

Assessment Results:
${assessment}

Questionnaire Responses:
${Object.entries(data)
  .map(([key, value]) => `${key}: ${value}`)
  .join("\n")}

Generated on: ${new Date().toLocaleDateString()}
    `.trim()

    const blob = new Blob([reportContent], { type: "text/plain" })
    const url = URL.createObjectURL(blob)
    const a = document.createElement("a")
    a.href = url
    a.download = "eb1-eligibility-assessment.txt"
    document.body.appendChild(a)
    a.click()
    document.body.removeChild(a)
    URL.revokeObjectURL(url)
  }

  const handleEmailReport = () => {
    const subject = encodeURIComponent("My EB-1 Eligibility Assessment Results")
    const body = encodeURIComponent(`
Please find my EB-1 eligibility assessment results below:

${assessment}

I'm interested in learning more about Exelita's services.

Best regards
    `)

    window.open(`mailto:irewole@exelita.com?subject=${subject}&body=${body}`)
  }

  if (loading) {
    return (
      <div className="text-center py-12">
        <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-purple-600 mx-auto mb-4"></div>
        <h3 className="text-lg font-semibold text-gray-900 mb-2">Analyzing Your Profile...</h3>
        <p className="text-gray-600">Our AI is evaluating your qualifications against EB-1 criteria</p>
      </div>
    )
  }

  if (error) {
    return (
      <div className="text-center py-12">
        <AlertCircle className="h-12 w-12 text-red-500 mx-auto mb-4" />
        <h3 className="text-lg font-semibold text-gray-900 mb-2">Assessment Error</h3>
        <p className="text-gray-600 mb-6">{error}</p>
        <div className="flex justify-center gap-4">
          <Button variant="outline" onClick={onBack}>
            <ChevronLeft className="h-4 w-4 mr-2" />
            Go Back
          </Button>
          <Button onClick={() => window.location.reload()}>Try Again</Button>
        </div>
      </div>
    )
  }

  return (
    <div className="space-y-6">
      {/* Success Header */}
      <div className="text-center bg-green-50 p-6 rounded-lg">
        <CheckCircle className="h-12 w-12 text-green-500 mx-auto mb-4" />
        <h3 className="text-xl font-semibold text-gray-900 mb-2">Assessment Complete!</h3>
        <p className="text-gray-600">Here's your personalized EB-1 eligibility analysis</p>
      </div>

      {/* Assessment Results */}
      <div className="bg-white border rounded-lg p-6">
        <div className="prose max-w-none">
          <div className="whitespace-pre-wrap text-sm text-gray-700 leading-relaxed">{assessment}</div>
        </div>
      </div>

      {/* Action Buttons */}
      <div className="grid grid-cols-1 sm:grid-cols-2 gap-4">
        <Button
          onClick={handleDownloadReport}
          className="flex items-center justify-center gap-2 bg-transparent"
          variant="outline"
        >
          <Download className="h-4 w-4" />
          Download Report
        </Button>

        <Button
          onClick={handleEmailReport}
          className="flex items-center justify-center gap-2 bg-transparent"
          variant="outline"
        >
          <Mail className="h-4 w-4" />
          Email Results
        </Button>
      </div>

      {/* Next Steps CTA */}
      <div className="bg-purple-50 p-6 rounded-lg">
        <div className="flex items-start gap-4">
          <TrendingUp className="h-6 w-6 text-purple-600 mt-1 flex-shrink-0" />
          <div>
            <h4 className="font-semibold text-gray-900 mb-2">Ready to Build Your EB-1 Petition?</h4>
            <p className="text-gray-600 text-sm mb-4">
              Join our beta program to access our AI-powered petition builder and expert guidance.
            </p>
            <div className="flex flex-col sm:flex-row gap-3">
              <Button
                className="bg-purple-600 hover:bg-purple-700"
                onClick={() => window.open("https://forms.office.com/r/KNDUcFg5Vw", "_blank")}
              >
                Join Beta Program
              </Button>
              <Button variant="outline" onClick={onClose}>
                Continue Browsing
              </Button>
            </div>
          </div>
        </div>
      </div>

      {/* Navigation */}
      <div className="flex justify-between pt-4">
        <Button variant="outline" onClick={onBack} className="flex items-center gap-2 bg-transparent">
          <ChevronLeft className="h-4 w-4" />
          Back to Questions
        </Button>

        <Button onClick={onClose} variant="outline">
          Close Assessment
        </Button>
      </div>
    </div>
  )
}
